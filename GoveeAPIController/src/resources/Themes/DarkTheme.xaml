<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:MW="http://metro.mahapps.com/winfx/xaml/controls">

    <SolidColorBrush x:Key="BackgroundColor" Color="#FF1F1F1F"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="White"/>
    <SolidColorBrush x:Key="TransparentColor" Color="Transparent"/>
    <SolidColorBrush x:Key="BorderColor" Color="#343a40"/>
    <SolidColorBrush x:Key="MouseOverBackgroundColor" Color="#495057"/>

    <Style TargetType="{x:Type MW:MetroWindow}" x:Key="WindowTheme">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="ShowCloseButton" Value="False"/>
        <Setter Property="ShowMaxRestoreButton" Value="False"/>
        <Setter Property="TitleBarHeight" Value="0"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TbTheme">
        <Setter Property="Background" Value="{DynamicResource TransparentColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
    </Style>

    <Style TargetType="Button" x:Key="TopBtnTheme">
        <Setter Property="Background" Value="{DynamicResource TransparentColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="BtnTheme">
        <Setter Property="Background" Value="{DynamicResource BorderColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Content="{TemplateBinding Content}"
                                   ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="BtnCloseStyle">
        <Setter Property="Margin" Value="0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="TBorder"
                          BorderThickness="0"
                          Background="{DynamicResource BackgroundColor}">
                        <ContentPresenter VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TBorder" Property="Background" Value="DarkRed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TrackButtonStyle" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderTheme" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <TickBar x:Name="TopTick" 
                                 Placement="Top"
                                 Fill="{DynamicResource TransparentColor}"
                                 Height="4"
                                 Visibility="Visible"
                                 VerticalAlignment="Top"
                             />

                        <Track x:Name="PART_Track"
                           Minimum="{TemplateBinding Minimum}"
                           Maximum="{TemplateBinding Maximum}"
                           Value="{TemplateBinding Value}"
                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}">

                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    Style="{StaticResource TrackButtonStyle}"
                                              IsTabStop="False"
                                              BorderBrush="{DynamicResource TransparentColor}"
                                              Background="{DynamicResource BorderColor}"
                                    Width="6">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                CornerRadius="0,0,3,3"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>

                            <Track.Thumb>
                                <Thumb Background="{DynamicResource BorderColor}" 
                                       BorderThickness="0"
                                       Width="20"
                                       Height="20">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid>
                                                <Ellipse x:Name="thumbEllipse"
                                                     Fill="{TemplateBinding Background}" 
                                                     Stroke="{TemplateBinding BorderBrush}" 
                                                     StrokeThickness="{TemplateBinding BorderThickness}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="thumbEllipse" Property="Fill" Value="{DynamicResource ResourceKey=MouseOverBackgroundColor}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton 
                                    Style="{StaticResource TrackButtonStyle}"
                                              IsTabStop="False"
                                              BorderBrush="{DynamicResource TransparentColor}"
                                              Background="{DynamicResource BorderColor}"
                                    Width="4">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                CornerRadius="2,2,0,0"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>